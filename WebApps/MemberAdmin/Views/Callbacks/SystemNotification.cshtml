@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>System Notifications</title>
</head>
<body>
@if (Request.IsAuthenticated)
{
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/signalr")
    <script src="@Url.Content("~/signalr/hubs")"></script>

    <script type="text/javascript">

        var _conn = null;

        function conn() {
            if (_conn == null) {
                var conn;
                if (typeof parent != 'undefined' && parent != null) {
                    if (parent.s_connection == null) {
                        parent.s_connection = $.connection;
                    }
                    _conn = parent.s_connection;
                } else {
                    _conn = $.connection;
                }
            }
            return _conn;
        }

        $(function () {
            var notice = conn().notificationHub;
            //function (typeId, msgs, categs) {
            notice.on("serverNotifications", function (typeId, msgs, categs) {
                if (parent && typeof parent.serverNotifications != 'undefined') {
                    parent.serverNotifications(typeId, msgs, categs, __chat_invitation_handler, __peer_status_handler);
                }
            });
            conn().hub.start().done(function () {
                isChatHubStarted = true;
                parent.__systemNotifier = notice.server;
            });
        });

        var isChatHubStarted = false;

        function __chat_invitation_handler(respType, peerId, connectionId, msg) {
            var chat = conn().privateChatHub;
            chat.server.userConnectResponse(respType, peerId, connectionId, msg);
        }

        function __peer_status_handler(statusType, peerId) {
            var chat = conn().privateChatHub;
            chat.server.togglePeerStatus(statusType, peerId);
        }
    </script>
}
</body>
</html>
